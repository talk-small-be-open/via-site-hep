//
// Styles for hep tocca
//
// Namespace: "t-" = short for "Tocca-"
// Caveat! The term "Module" is used in the via software as the container for tasks, but
// is also used as a group name for two units of the Tocca-Book

// =======================================================================
// Fonts
// =======================================================================

// Font "zeitung" is included via online Adobe CSS

// @font-face {
//   font-family: zeitung;
//   src: url(fonts/NunitoSans-Regular.ttf);
// 	font-weight: normal; // 400
// }

// =======================================================================
// Importing
// =======================================================================

// Import main styles
@import "../../base/web_root/css/styles.less";

// Our SITE own uikit theme (overrides to the via base uikit theme)
@import "uikit_theme/_import.less";

@import "testdrive.less";

// =======================================================================
// Variables
// =======================================================================


@t-color-black: #333;
@t-color-blue: #117CBE;
@t-color-red: #CE5C5B;
@t-color-unit1: #ca4947;
@t-color-unit2: #f08c2d;
@t-color-unit3: #8aa95b;
@t-color-tandem-question: #f08c2d;
@t-color-tandem-answer: #CDE5F2;


@wrongColor: inherited;
@correctColor: #efe;


@t-header-height:             4rem;
@t-header-height-small:       5vh;
@t-header-background:         @t-color-black;
@t-header-small-background:   @t-color-black;
@t-header-shadow-sticky:      0 0 50px 1px rgba(0,0,0,0.2);
@t-header-shadow-teaser:      0 0 150px 1px rgba(0,0,0,0.5);
@t-header-padding:            1rem;



// Redefine basics for this via sub-website
@via-basic-color: @t-color-black;
@via-basic-background-color: @t-color-red;
// @via-coloredbutton-color: #555;
// @via-coloredbutton-hover-color: darken(@via-coloredbutton-color, 10%);


// =======================================================================
// DEVELOPMENT ONLY
// =======================================================================



// =======================================================================
// UI Breakpoints
// =======================================================================
// {{{


// Small and bigger

@media (min-width: @breakpoint-small) {
		div.coreContainer {
				padding-left: 2em;
				padding-right: 2em;
		}
}

// Not small phones
@media (min-width: @breakpoint-small-max) {
		body.loggedIn {
				div.core {
						min-height: 500px;
				}
		}

		div.VIATocTaskExerciser {
				div.exercise {
						div.audioPlayer {
								width: 50%;
						}

						div.videoPlayer {
								max-width: 50%;
						}
				}
		}
}

// Only very small phones
@media (max-width: @breakpoint-small) {
		div.coreContainer {
				padding-left: 0;
				padding-right: 0;
		}

		div.footer {
				// position: sticky;
				// bottom: 0;
						
		}

}

// }}}

// =======================================================================
// Mixins
// =======================================================================
// {{{

// Tocca big button base styles
.bigButton {
//		text-transform: uppercase;
		text-align: center;
		display: flex;
		flex-direction: column;
		justify-content: center;
		padding: auto;
		height: 3em;
		//		padding: 2em;
//		margin: 0.1em;
		cursor: pointer;
		font-size: 200%;
		//		background-color: transparent;
		border: 2px solid @global-color;

		&:hover {
				text-decoration: none;
		}

		// // Adjacent buttons get margin
		// + .bigButton {
				
		// }

}

// Mixin, to define the style of a big button inside a region
.bigButtonStyle(@color, @inverseColor: white) {
		.bigButton {
				border-color: @color;
				color: @color;

				&:active, &:hover, &.active {
						background-color: @color;
						color: @inverseColor;
				}
		}

}

// Siehe auch button.less im ui kit theme
.button {
		text-transform: uppercase;
		// padding: 1em;
		// margin: 0.1em;
		cursor: pointer;
		border: 2px solid @global-color;

}

.catalogListItem() {
		border-top-width: 2px;
		border-top-style: solid;
		border-top-color: #333;
		padding: 1em 0;
		margin: 0;
		cursor: pointer;

		a {
				color: inherit;
		}
}

// Use this on html elements which are decorated with a "toccamoduleX" css class, to set
// the background color to the unit's main color
// Example: .toccamoduleBackgroundColor("div.control span.button")
.toccamoduleBackgroundColor(@selector){
		@s: e(@selector); // converting the incoming string as a literal (strange less behaviour)
		&.toccamodule1 {@{s} {background-color: @t-color-unit1;}}
		&.toccamodule2 {@{s} {background-color: @t-color-unit2;}}
		&.toccamodule3 {@{s} {background-color: @t-color-unit3;}}
}

// Use this on html elements which are decorated with a "toccamoduleX" css class, to set
// the border color to the unit's main color
// Example: .toccamoduleBorderColor("div.control span.button")
.toccamoduleBorderColor(@selector){
		@s: e(@selector); // converting the incoming string as a literal (strange less behaviour)
		&.toccamodule1 {@{s} {border-color: @t-color-unit1;}}
		&.toccamodule2 {@{s} {border-color: @t-color-unit2;}}
		&.toccamodule3 {@{s} {border-color: @t-color-unit3;}}
}

// Use this on html elements which are decorated with a "toccamoduleX" css class, to set
// the text color to the unit's main color
// Example: .toccamoduleColor("h1")
.toccamoduleColor(@selector){
		@s: e(@selector); // converting the incoming string as a literal (strange less behaviour)
		&.toccamodule1 {@{s} {color: @t-color-unit1;}}
		&.toccamodule2 {@{s} {color: @t-color-unit2;}}
		&.toccamodule3 {@{s} {color: @t-color-unit3;}}
}

.toccamoduleButton(@selector){
		@s: e(@selector); // converting the incoming string as a literal (strange less behaviour)

		.style(@localColor) {
				border-color: @localColor;
				color: @localColor;
				background-color: white;

				&:hover, &:active {
						background-color: @localColor;
						color: white;
						text-decoration: none;
				}

		}
		
		&.toccamodule1 {@{s} {.style(@t-color-unit1)}}
		&.toccamodule2 {@{s} {.style(@t-color-unit2)}}
		&.toccamodule3 {@{s} {.style(@t-color-unit3)}}
}

.noUserSelect() {
		
		user-select: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		cursor: default;
}

.noTouch() {
		touch-action: none;
}

.draggable() {
		.noUserSelect();
		.noTouch();
		cursor: move;
}

.dropHover() {
		&.dropHover {
				background-color: @dropTargetHoverColor;
		}
}



// }}}

// =======================================================================
// General Styles
// =======================================================================
// {{{

html {
//bad		height: 100%;
}

svg.svg-icon {
		width: 1.1em;
//		height: 1.1em;
		stroke: currentcolor;
		font-size: 1.25em;
}

// Styles for the non-logged in public UI
body {
//bad		height: 100%;
		
		div.coreContainer {
//bad				height: 100%;

				div.core {
//bad						height: 100%;
						
				}
		}

		div.footer {
				padding: 0.5em;
		}


		&.wantRedBackground {
				background-color: @t-color-red;
				div.coreContainer {
//						padding-top: 2em;
						background-color: @t-color-red;
				}
		}

		&.public {
				//		background-color: @t-color-red;
				div.coreContainer {
						//				padding-top: 2em;
						//				background-color: @t-color-red;
				}

				h1, h2, h3 {
						color: white;
				}

				input.submit, button, a.uk-button {
						color: white;
						border-color: white;
				}

				a {
						color: black;

						&:hover {
								color: black;
						}
				}
		}
}

// General button styling
//WEG: Conflict with mediaelement and anyway to general: button
input.submit, button.uk-button, a.uk-button {
		.button();
}

// All buttons get the color of the tocca unit, if inside a div with tocca module number
div {
		.toccamoduleButton("input.submit");
//Conflict with mediaelement and anyway to general		.toccamoduleButton("button");
		.toccamoduleButton(".bigButton");
		.toccamoduleButton("button.uk-button");
		.toccamoduleButton("a.uk-button");
}


//
// header 
//
div.t-header {
    
		background-color: @t-header-background;
		padding: @t-header-padding;
		height: @t-header-height;

		a.t-logo {
				font-size: 1.5rem;
				font-weight: bold;
				color: white;
		}

		ul.uk-navbar-nav {
				margin-top: 1em;
		}

		div.t-menubar {
				a {
						color: white;

						+ a {
								margin-left: 1rem;
						}
						
						&.mainMenuToggler {
								span.uk-icon {
										margin-right: 0.2em;
								}
						}
				}
		}
		

		// Menu, in navbar or in offcanvas
		#mainMenu {
				ul.uk-nav {
						li {
								font-size: 1.5rem;
								font-weight: bold;

								ul.uk-nav-sub {
										li {
												font-size: 1.5rem;
												font-weight: normal;
										}
								}

						}

						

				}

				&.uk-offcanvas {
						color: white;
						ul.uk-nav {
								li {
										a {
												color: white;
										}
								}
						}
				}
		}
}

// }}}


// =======================================================================
// UI components
// =======================================================================
// {{{

div.inputDialog {
		input[type=text] {
				width: 100%;
				font-size: 120%;
				margin: 1em 0;
		}
}

div.VIAPublicHomeComponent {

		padding-bottom: 1em;
		
		div.toccaBanner {
				// background-color: @t-color-red;
				// background-image: url(/site/images/public_banner.jpg);
				// background-repeat: no-repeat;
				// background-size: cover;
				padding: 0;
				margin: 1rem 0;

				div.title {
						background-image: url(/site/images/public_banner.jpg);
						background-repeat: no-repeat;
						background-size: cover;
						font-size: 4rem;
						line-height: 4rem;
						color: white;
						padding: 1em 0;
						text-align: center;
						margin-bottom: 1rem;
				}

				.bigButtonStyle(@t-color-red, white);

		}

		div.infoButtons {
				.bigButtonStyle(@t-color-red);
		}

}

div.VIAMyHomeComponent {

		div.startArea {
				background-color: @t-color-red;
				.bigButtonStyle(white, @t-color-red);
				
		}
		
		div.infoButtons {
				.bigButtonStyle(@t-color-blue);
		}

}



div.VIATocLoginComponent {
		height: 100%;
		background-color: @t-color-red;
		
		h1 {
				text-align: center;
		}
}

div.VIAToccaStartComponent {
		margin: 2em 0;

		div.VIAModuleFinderComponent {
				margin-bottom: 2em;
		}
}

div.VIAModuleFinderComponent {

		div.searchBar {
				border: 1px solid black;
				padding: 0 0 0 1em;
				position: relative;
				@fontsize: 2rem;
				
				input[type=text] {
						font-size: @fontsize;
						
						&.searchInput1 {
								width: 0.7em;
				//				text-align: right;
						}

						&.searchInput2 {
								width: 3em;
						}

						&.searchInput1, &.searchInput2 {
								display: inline-block;
								border: none;
						}

						&:focus {
								border: none;
								outline: none;
						}
				}

				span.dot {
						font-size: @fontsize;
						display: inline-block;
						width: 0.5em;
						margin-right: 0.1em;
						text-align: center;
						font-weight: bold;
				}

				button.go {
						font-size: @fontsize;
						background-color: red;
						color: white;
						border: none;
						position: absolute;
						height: 100%;
						right: 0;
				}
		}

		div.keyboard {
				.noUserSelect();

				margin: 1em 0;
				span.keyboardButton {
						@color: #333;
						
						font-size: 1.5rem;
						padding: 0.4em 0;
						background-color: @color;
						color: white;
						text-align: center;
						display: inline-block;
						width: 100%;

						&:hover {
								background-color: lighten(@color, 30%);
						}
				}
		}

		div.VIAModulesListComponent {
				margin-top: 1em;
		}
				

}


div.VIATocModuleExerciser {

		// Header gets units background color
		.toccamoduleBackgroundColor("h1.moduleNavigation");
		
		h1.moduleNavigation {
				margin: 0;
				color: white;
				text-align: center;
				padding: 0;

				display: flex;
				justify-content: space-between;
				align-items: center;
				position: sticky;
				top: @t-header-height;
				
				span.leftRight {
						width: 15%;
						a {
								color: inherit;
						}
				}
		}

		h2.moduleTitle {
				color: @t-color-blue;
				text-align: center;
				margin-top: 0.5em;
				margin-bottom: 1em;
		}

		div.moduleBody {
				margin: 0 0.5em;
		}

		// Accordion top line
		div.accBar {
				.catalogListItem();

				.accTitle {
						display: inline;
						color: @t-color-blue;
				}

				&.ignored {
						background-color: #eee;
						text-decoration: line-through;
				}
				
				&.isOpen {
						background-color: #eee;
						.accToggle {
								.doOpen {display:none}
								.doClose {display:inline}
						}
				}
				
				.accToggle {
						float: right;

						.doOpen {display:inline}
						.doClose {display:none}
				}
		}


		div.hiddenTaskExercise {
				// Nicht display:none, weil das Berechnungen der enthaltenen Elemente mit Breite etc. nicht möglich macht
				
				position: absolute !important;
				top: -9999px !important;
				left: -9999px !important;
				width: 100%; // TODO: Smarter, aber ich fand nicht heraus, wo die Breite drin steht. Wir brauchen aber eine feste Breite, damit die Berechnung per JS OK ist
				visibility: hidden;
				
		}


		// Exercise displayer for every task (in a module)
}


// Not inside the VIATocModuleExerciser, because it could be stand alone (e.g. in the backend testdrive)
div.VIATocTaskExerciser {
		padding-left: 0.2em;
		padding-right: 0.2em;

		margin-bottom: 1em;


		// Styles inside the content of tasks
		div.exercise {
				
				@dropTargetHoverColor: yellow;
				
				margin-bottom: 50px;

				div.topToolbar {
						//								float: right;
						.bigButton.ignoreTask {
								height: 1.5em;
						}
				}

				// Titles inside task content, should not be as big as official titles
				h1 {
						font-size: 120%;
				}

				h2 {
						font-size: 110%;
				}

				h3 {
						font-size: 100%;
				}

				table {
//						border: 1px solid #999;
						border-collapse: collapse;

						tr {
								border-bottom: 1px solid #999;								
						}

						td, th {
								padding-top: 5px;
								padding-bottom: 5px;
								padding-right: 2px;
						}

						td + td, th + th {
								border-left: 1px solid #999;
								padding-left: 2px;
						}
				}

				
				input[type=text] {
						font: inherit;
						padding: 0 2px;
						margin: -2px 0;
				}

				input[type=text].clozeTextPlaceholder {
						.clozeTextPlaceholder;

						&:focus {
								outline: 1px solid #ccc;
								background-color: #ffd;
						}

						// Intentionally set as empty by user
						&.markedAsEmpty {
								background-color: black;
						}
				}

				
				input, select, textarea {
						// font-family: @base-body-font-family;
				}

				p {
						margin-top: 3px;
						margin-bottom: 3px;
				}


				
				div.selectOneInput, div.selectPointsInput {
						margin-bottom: 10px;

						label:hover {
								background-color: #eee;
						}

						span.wrongIcon {
								// position: absolute;
								// left: -15px;
						}


				}

				div.selectOneInput {
						.bigButtonStyle(@t-color-blue);

						select.selectOneInput {
								max-width: 100%;
						}


				}

				div.selectMany {
						label:hover {
								background-color: #eee;
						}

						span.wrongIcon {
								position: absolute;
								left: -15px;
						}

						.bigButtonStyle(@t-color-blue);

				}
				
				div.clozeText {
						line-height: 1.8em;

						div.selectOneInput {
								display: inline-block;
						}


						span.dragDropDraggable {
								.draggable();
								
								background-color: #eee;
								padding: 1px 2px;
								border: 1px solid #ccc;

								// margin-bottom: 10px;
								// line-height: normal;
								display: inline-block;

								&:hover {
										border: 1px solid black;
								}

								figure.inlineAssetImage {
										display: inline-block;

										figcaption {
												display: none;
										}
								}
								
						}
						
						span.dragDropTarget {
								display: inline-block;
								min-width: 100px;
								background-color: #eee;
								padding-left: 5px;
								padding-bottom: 1px;
								min-height: 1em;
								border-top: none;
								border-left: none;
								border-right: none;
								border-bottom: @borderBottomClozePlaceholders;

								.dropHover();

								span.draggableContainer {
										white-space: nowrap;
										// Drag element in a drop container
										span.dragDropDraggable {
												margin-right: 10px;
										}
								}
						}

						div.dragDropDraggables {
								background-color: #eee;
								border: 1px dotted black;
								margin: 10px 0;
								padding: 1px 5px;
								min-height: 20px;

								.dropHover();
								
								span.dragDropDraggable {
										.draggable();
										
										margin-right: 5px;
										// line-height: normal;
										display: inline-block;

										figure.inlineAssetImage {
												display: inline-block;

												figcaption {
														display: none;
												}
												
												// span.assetInfo {
												// 		.uk-text-muted();
												// 		cursor: pointer;
												// 		float: right;
												// }
										}
										
								}
						}

				}

				div.buttons {

						margin-top: 15px;

						// input.submit, button {
						// 		&.check, &.reset, &.recheck, &.revealAnswers, &.save {
						// 				background: #f00;
						// 				color: #fff;
						// 				border:  0px;
						// 				padding: 10px;
						// 				font-size: 1.2em;
						// 				cursor: pointer;
						// 		}
						// }

						
				}


				div.audioPlayer {
						//				width: 50%;
						margin: 10px 0px;
						span.assetInfo {
								float: right;
						}

						
						div.transcriptionContainer {

								div.transcriptionText {
										font-size: 90%;
										line-height: normal;
								}

								
								div.audioTranscription {
										&.disabled {
												.uk-hidden();
										}

										button.printThis {
												float: right;
										}
								}
						}
				}

				
				div.videoPlayer {
						
						div.videoContainer {
								margin-right: 10px;
						}

						div.transcriptionContainer {

								div.videoTranscription {
										&.disabled {
												.uk-hidden();
										}

										button.printThis {
												float: right;
										}
								}

								div.transcriptionText {
										font-size: 90%;
										line-height: normal;
								}
						}

						span.assetInfo {
								float: right;
						}
				}

				div.imageDisplayer {
						span.image {
								display: inline-block;
								text-align: right;
								img {
										display: block;
								}
								span.assetInfo {
								}
								
						}
				}

				span.assetInfo {
						.uk-text-muted();
						cursor: pointer;
				}

				span.hintSymbol {
						display: inline-block;
						margin: 0.2em;
						vertical-align: middle;
				}


				// Obsolete? Wir haben nur click-click und kein drag-drop bei tocca
				div.mapPairs {
						@pairBorder: 1px solid black;
						
						border-top: @pairBorder;
						display: table;
						border-collapse: collapse;
						
						div.objectPair {
								display: table-row;
								border-bottom: @pairBorder;

								.dropHover();

								span.hintSymbol {
										float:left;
										margin-left: -20px;
										margin-top: 10px;
								}
								
								div.leftObject {
										display: table-cell;
										padding-left: 10px;
								}

								div.middleColumn {
										display: table-cell;
								}

								div.rightObject {
										@dragHandleOffset: 25px;

										display: table-cell;
										padding: 5px 10px 5px (@dragHandleOffset + 10px);

										div.objectPairDraggable {
												background-color: #eee;
												padding: 10px;
												border: 1px solid #ddd;
												margin-bottom: 10px;

												.draggable();

												&:hover {
														border: 1px solid #333;
												}

												&:only-child {
														margin-bottom: 0;
												}

												&:not(:first-child) {
														background-color: #f99;
												}

												span.dragHandle {
														position: absolute;
														margin-left: -@dragHandleOffset;
												}

										}
								}
						}
				}


				div.mapPairsClickClick {
						@pairBorder: 1px solid black;
						
						border-top: @pairBorder;
						display: table;
						border-collapse: collapse;

						
						div.objectPair {
								display: table-row;
								border-bottom: @pairBorder;

								.selection() {
										&.selected {
												background-color: yellow;
										}
								}
								
								span.hintSymbol {
										float:left;
										margin-left: -20px;
										margin-top: 10px;
								}
								
								div.leftObject {
										display: table-cell;
										padding-left: 10px;
										cursor: pointer;
										.selection();
								}

								div.middleColumn {
										display: table-cell;
										padding: 0 1em;
								}

								div.rightObject {
										display: table-cell;
										padding: 5px 10px 5px 10px;
										cursor: pointer;
										.selection();

								}

								div.endColumn {
										display: table-cell;
								}

						}
				}
				
				div.score {
						margin-top: 2em;
						// background-color: white;
						font-weight: bold;
				}


				div.objectPairDragHelper {
						padding: 10px;
						border: 1px solid black;
				}

				div.highlightAreas {

						.noUserSelect();
						.noTouch();
						letter-spacing: 0.1em;
						//Nicht, hinterlässt weisse verratene Lücken beim Markieren		word-spacing: 0.1em;
						padding: 10px;
						margin: 15px 0;
						border: 1px solid #aaa;

						span.highlightArea.solution {
								border: 1px solid #333;
								padding-left: 1px;
						}

						div.pillarParagraph:first-child {
								margin-top: 0;
						}
						
						span.selChar {
								cursor: url('/files/images/horizontal-text-select.cur'), text;
								&.highlighted {
										background-color: green;
										color: white;
										padding-top: 1px;
								}
								&.selected {
										background-color: red;
								}
						}		
				}

				div.taskGroup {
						
						div.taskGroupItem {
								margin: 10px 0px;
						}
				}

				button.taskBrickGroupToggler {
						background-color: #999;

						&:hover {
								background: black;
						}
				}

				div.taskBrickGroup {
						// border: 1px solid black;
						padding: 5px;
				}
				
				
		}


		
		// Tandem sequence
		div.VIATandemSequenceExerciser {
				div.question {
						background-color: @t-color-tandem-question;
						padding: 2em;
						margin-bottom: 2em;

						div.explanation {
								margin-bottom: 2em;
						}
				}

				div.questionAndAnswer {
						background-color: @t-color-tandem-answer;
						padding: 1em;
						div.answer {
								margin-top: 2em;
						}
				}

				div.navigation {
						position: sticky;
						bottom: 0;
						background-color: white;
						font-size: 200%;
						display: flex;
						justify-content: space-between;
						align-items: center;

						a {
								color: inherit;
						}

						// span.leftRight {
						// 		width: 15%;
						// 		a {
						// 				color: inherit;
						// 		}
						// }

						
				}
				
		}

		div.orderItems {
				ul.orderItemsList {
						list-style: none;
						padding: 0;

						li.orderItem {
								cursor: move;
						}
				}
		}
}


div.VIAUnitComponent {

		.toccamoduleBorderColor('ul.modulesList li');
		.toccamoduleColor('h1');
		
}

ul.modulesList {
		.uk-list();
		
		padding-left: 0;
		list-style-type: none;
		
		li {
				.catalogListItem();

				span.indexCode {
						display: inline-block;
						width: 3em;
						font-weight: bold;
				}
		}
}


// ============================================
// Misc
// ============================================

// TODO: Oben einsortieren!

figure.inlineAssetImage {
		display: inline-block;

		figcaption {
				display: none;
		}
}

span.inlineAssetAudio {
		audio {
				display: inline-block;
				width: 5em;
		}

		div.mejs__container {
				display: inline-block;
				width: 5em;
				vertical-align: middle;
		}
}

.correct {
		background-color: #cfc;
}

.wrong {
		background-color: @wrongColor;
}

span.partiallyCorrectIcon {
		color: orange;
}

span.correctIcon {
		color: #1a1;
}

span.wrongIcon {
		color: red;
		padding-left: 4px;
		padding-right: 2px;
}

div.webui-popover {
		span.markAsEmpty {
				cursor: pointer;
				border: 2px solid green;

				&.active {
						background-color: green;
				}
		}
}

// div.VIAExerciserSolutionComponent,
// div.VIAExerciserFinishedComponent {
// 		.solution {
// 				// background-color: lightyellow;

// 				&.answerWasWrong {
// 						// background-color: @wrongColor;
// 				}

// 				&.answerWasCorrect {
// 						background-color: @correctColor;
// 				}
// 		}
// }

// // div.VIAExerciserFinishedComponent {
// // 		.solution {

// // 				&.answerWasWrong {
// // 						// background-color: transparent;
// // 				}

// // 		}
// // }


span.copyPaste, pre.copyPaste {
		cursor: pointer;
}




// // TODO Evt. innerhalb taskEditor
// div.inputEditor {
// 		> div.inputEditor {
// 				border: 1px solid #333;
// 				background-color: #f3f3f3;
// 				padding: 5px;
// 				margin: 10px 0;
// 		}
// }

span.dictionaryEntry {
		border-bottom: 1px dotted #333;
}


.finished {
		background-color: #999;
}

.inWork {
		background-color: #999;
}

// div.moduleScore {
// //		float: right;
// //		margin-bottom: 5px;

// 		table.scoreTable {
// 				border-collapse: collapse;

// 				td {
// 						border: 1px solid black;

// 						&.ignored {
// 								background-color: #999;
// 								color: #666;
// 						}

// 						span.taskNumber {
// 								font-size: 14px;
// 								margin: 0 5px;
// 								font-weight: bold;
// 						}

// 				}

// 		}
// }


div.moduleBody {
		clear: both;
		position: relative; // Wichtig, damit eingebettete versteckte absolute-Elemente die Breite korrekt berechnen können
}


// Keep this for Emacs editor!
// NOT origami-fold-style: triple-braces
//
// Local Variables:
// less-css-compile-at-save: t
// origami-fold-style: js-mode
// End:
